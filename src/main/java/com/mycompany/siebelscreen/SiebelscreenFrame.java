/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.siebelscreen;

import org.apache.poi.ss.usermodel.DataFormatter;
import org.openqa.selenium.*;

import org.openqa.selenium.chrome.ChromeDriver;

import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.*;
import java.util.Iterator;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.io.File;
import java.io.FileInputStream;

import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.io.FileHandler;
import org.openqa.selenium.support.ui.Select;

/**
 *
 * @author Mohamed
 */
public class SiebelscreenFrame extends javax.swing.JFrame implements ActionListener , ListSelectionListener{

    private String scr;

    /**
     * Creates new form SiebelscreenFrame
     */
    public SiebelscreenFrame() {
        initComponents();
        ImageIcon img = new ImageIcon("src/main/resources/orange-logo-vector1.png");
        this.setIconImage(img.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        getb = new javax.swing.JButton();
        getb.addActionListener(this);

        user = new javax.swing.JTextField();
        pass = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        screen = new javax.swing.JCheckBox();
        screen.addActionListener(this);

        hideb = new javax.swing.JCheckBox();
        hideb.addActionListener(this);

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        loadfilem = new javax.swing.JMenuItem();
        loadfilem.addActionListener(this);

        exit = new javax.swing.JMenuItem();
        exit.addActionListener(this);

        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        getb.setText("Get Data");
        getb.setActionCommand("getdata");
        getb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getbActionPerformed(evt);
            }
        });

        user.setActionCommand("<Not Set>");

        jLabel1.setText("Siebel User");

        jLabel2.setText("Password");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setViewportView(jTextArea1);

        screen.setText("With Screenshot");
        screen.setActionCommand("screen");

        hideb.setText("Hide Browser");
        hideb.setActionCommand("hideb");

        jMenuBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jMenu1.setText("File");

        loadfilem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        loadfilem.setText("Load File");
        loadfilem.setActionCommand("loadfilem");
        loadfilem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadfilemActionPerformed(evt);
            }
        });
        jMenu1.add(loadfilem);

        exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        exit.setText("Exit");
        exit.setActionCommand("exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        jMenu1.add(exit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        jMenuItem4.setText("Help");
        jMenuItem4.setToolTipText("");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem5.setText("About");
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(100, 100, 100)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(40, 40, 40)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(56, 56, 56)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(screen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(hideb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(210, 210, 210)
                                                .addComponent(getb, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(48, 48, 48)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(19, 19, 19)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(154, 154, 154)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(screen))
                                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(30, 30, 30)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(hideb)
                                                        .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel2))
                                                .addGap(74, 74, 74)
                                                .addComponent(getb, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void loadfilemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadfilemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loadfilemActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exitActionPerformed

    private void getbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_getbActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SiebelscreenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SiebelscreenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SiebelscreenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SiebelscreenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SiebelscreenFrameBuilder().createSiebelscreenFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem exit;
    private javax.swing.JButton getb;
    private javax.swing.JCheckBox hideb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JMenuItem loadfilem;
    private javax.swing.JPasswordField pass;
    private javax.swing.JCheckBox screen;
    private javax.swing.JTextField user;
    // End of variables declaration//GEN-END:variables
    private java.io.File f;






    @Override
    public void actionPerformed(ActionEvent e) {
        switch (e.getActionCommand()) {


            case "loadfilem":
                loadfilem();
                break;

            case "exit":
                exit();
                break;



            case "getdata":
            {
                try {
                    getb();
                } catch (InterruptedException ex) {
                    Logger.getLogger(SiebelscreenFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
            break;

            case "screen":
                screen();
                break;
            case "hideb":
                hideb();
                break;

        }

    }

    private void loadfilem() {

        JOptionPane.showMessageDialog(this, "Please, select Excel file!", "Attension", JOptionPane.WARNING_MESSAGE);
        JFileChooser file = new JFileChooser();
        file.setMultiSelectionEnabled(true);
        file.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        file.setFileHidingEnabled(false);
        if (file.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            f = file.getSelectedFile();
            System.err.println(f.getPath());
            jTextArea1.setText("File Add Successfully   "+f.getPath());

        }
    }

    private void exit() {

        System.exit(0);

    }

    private void getb() throws InterruptedException, Exception {
        System.setProperty("webdriver.chrome.driver", "src/main/resources/chromedriver.exe");
        WebDriver driver = new ChromeDriver();

        String userValue = user.getText();
        char[] passValue = pass.getPassword();

        String user = new String(userValue);
        String pass = new String(passValue);

        driver.navigate().to("https://ilm2/siebeldirect/");
        driver.manage().window().maximize();

        driver.findElement(By.id("details-button")).click();
        driver.findElement(By.id("proceed-link")).click();

        driver.get("https://"+user+":"+pass+"@ilm2/siebeldirect/");

        driver.findElement(By.id("proceed-button")).click();
        Thread.sleep(32000);


        driver.findElement(By.cssSelector("a[data-tabindex=\"tabScreen1\"]")).click();
        Thread.sleep(2000);



//        Dimension d = new Dimension(2543,2286);
//        driver.manage().window().setSize(d);

        Robot robot = new Robot();
        for (int i=0; i<4; i++)
        {
            robot.keyPress(KeyEvent.VK_CONTROL);
            robot.keyPress(KeyEvent.VK_SUBTRACT);
            robot.keyRelease(KeyEvent.VK_SUBTRACT);
            robot.keyRelease(KeyEvent.VK_CONTROL);

        }

        File src=new File(f.getPath());
        FileInputStream fis=new FileInputStream(src);
        XSSFWorkbook wb=new XSSFWorkbook(fis);
        XSSFSheet sheet1=wb.getSheetAt(0);
        int rowcount=sheet1.getLastRowNum();
        System.err.println("Total rows is"+rowcount);

        for(int i=0;i<rowcount;i++)
        {
            DataFormatter formatter = new DataFormatter();
            String data0 = formatter.formatCellValue(sheet1.getRow(i+1).getCell(0));

//           String data0=sheet1.getRow(i+1).getCell(0).getStringCellValue();
            System.err.println("data"+data0);

            jTextArea1.setText(data0);



            driver.get("http://10.11.127.21/eCommunicationsWireless_enu/start.swe?SWECmd=GotoView&SWEView=BOW1+All+Service+Accounts+across+Organizations");
            Thread.sleep(8000);

            driver.findElement(By.cssSelector("input[name=\"s_2_1_7_0\"]")).sendKeys("MSISDN");

            driver.findElement(By.cssSelector("input[name=\"s_2_1_8_0\"]")).sendKeys(data0);
            driver.findElement(By.cssSelector("input[name=\"s_2_1_8_0\"]")).sendKeys(Keys.ENTER);
            driver.findElement(By.id("jqgh_s_2_l_Account_Status")).click();
            driver.findElement(By.cssSelector("span[class=\"siebui-icon-arrowsm-sort\"]")).click();
            String id = By.cssSelector("a[name=\"BOW1 Integration Id\"]").findElement(driver).getText();

            System.out.println(id);

            driver.findElement(By.cssSelector("a[name=\"BOW1 Integration Id\"]")).click();

            Thread.sleep(2000);


            Select se =new Select(driver.findElement(By.cssSelector("select[id=\"j_s_vctrl_div_tabScreen\"]")));
            se.selectByValue("tabScreen25");

            //PRENT CUSTOMER TAREF AND ACTIVATION DATE

            Thread.sleep(2000);

            driver.findElement(By.cssSelector("button[id=\"s_at_m_3\"]")).click();
            Thread.sleep(500);
//Print Preview...
            driver.findElement(By.cssSelector("li[id=\"ui-id-229\"]")).click();

//          driver.findElement(By.xpath("//a[text()='Print Preview...']")).click();
//           driver.findElement(By.xpath("//*[@id=\"ui-id-242\"]/a")).click();
//           driver.findElement(By.cssSelector("a[href=\"javascript:void(0)\"]")).click();
            //*[@id="ui-id-242"]/a

            ///Switch to popup window
            Set<String> handler = driver.getWindowHandles();
            Iterator<String> it = handler.iterator();
            String parentWindowId = it.next();
            System.out.println("parent window id  "+parentWindowId);
            Thread.sleep(500);

            String childWindowId = it.next();
            System.out.println("child window id  "+childWindowId);
            driver.switchTo().window(childWindowId);

            System.out.print("child window titel  "+driver.getTitle());

            //////get elements from popup window
//////////////////////
            String bucket =  driver.findElement(By.xpath("//*[@class=\"mceGridField siebui-value\"]/html/body/div/span/div[3]/div/div/table/tbody/tr[3]/td[8]/div")).getText();
            System.err.println(bucket);
///html/body/div/span/div[3]/div/div/table/tbody/tr[3]/td[8]/div
///html/body/div/span/div[3]/div/div/table/tbody/tr[5]/td[3]/div
            String activationd =  driver.findElement(By.xpath("//*[@class=\"mceGridField siebui-value\"]/html/body/div/span/div[3]/div/div/table/tbody/tr[5]/td[3]/div")).getText();
            System.err.println(activationd);
//
//                   Thread.sleep(1000);
            ////////////////////////////////////////
            // /close popup window and switch back to main window
            driver.close();
            driver.switchTo().window(parentWindowId);
            System.out.print("Parent window titel"+driver.getTitle());



            sheet1.getRow(i+1).createCell(1).setCellValue(bucket);

            System.err.println("data"+bucket);

            sheet1.getRow(i+1).createCell(2).setCellValue(activationd);

            System.err.println("data"+activationd);

            FileOutputStream fout=new FileOutputStream(src);

            wb.write(fout);

//           Screenshot s=new AShot().shootingStrategy(ShootingStrategies.viewportPasting(1000)).takeScreenshot(driver);
//           ImageIO.write(s.getImage(),"PNG",new File("./snaps/"+data0+"img.png"));

            robot.keyPress(KeyEvent.VK_PAGE_UP);

            Thread.sleep(1000);

            File screenshot = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
            try {
                FileHandler.copy(screenshot, new File("./snaps/"+data0+"img.png"));
            }catch (IOException e) {
                e.printStackTrace();
            }

//           byte[] imageBytes = ((ChromeDriver)driver).getFullPageScreenshotAs(OutputType.BYTES);
//           Files.write(Paths.get("./snaps/"+data0+"img.png"), imageBytes);

//           ChromeOptions options=new ChromeOptions();
//           ChromeOptions.CAPABILITY("--headless");
//           options = webdriver.ChromeOptions()
//           options.setHeadless(config.headless());
//
//           options.headless = True
//
//           driver = webdriver.Chrome(options=options)
//
//           S = lambda X: driver.execute_script('return document.body.parentNode.scroll'+X)
//           driver.setwindowsize(S('Width'),S('Height')) # May need manual adjustment
//           driver.find_element_by_tag_name('body').screenshot('web_screenshot.png')


//           File el = driver.findElement(By.tagName("body");
//           el.screenshot("./snaps/"+data0+"img.png");
//           chrome_options = Options();
//           chrome_options.add_argument('--headless');
//           chrome_options.add_argument('--start-maximized');
//           driver = webdriver.Chrome(chrome_options=chrome_options);
//           time.sleep(2)
//
//               ele=driver.find_element("xpath", '//div[@class="react-grid-layout layout"]');
//           total_height = ele.size["height"]+1000
//
//           driver.setWindowSize(1920, total_height)      #the trick
//           time.sleep(2)
//           driver.save_screenshot("screenshot1.png")
            driver.findElement(By.cssSelector("a[data-tabindex=\"tabScreen1\"]")).click();

        }








        // String userValue = user.getText();
        // char[] passValue = pass.getPassword();

        // String user = new String(userValue);
        //  String pass = new String(passValue);

        // String url = new String("https://"+user+"."+pass+".com");
        //System.err.println(url);
        // driver.get(url);



        Thread.sleep(1000);

        driver.quit();



    }
    private void screen() {


    }
    private void hideb() {
    }



    @Override
    public void valueChanged(ListSelectionEvent e) {
    }



}
